name: release
on:
  push:
    tags: ['v*']
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Pester & PSScriptAnalyzer
        shell: pwsh
        run: |
          Set-PSRepository PSGallery -InstallationPolicy Trusted
          Install-Module Pester,PSScriptAnalyzer -Scope CurrentUser -Force -SkipPublisherCheck

      - name: Lint (PSScriptAnalyzer)
        shell: pwsh
        run: |
          $errs = Invoke-ScriptAnalyzer -Path . -Recurse -Severity Error,Warning
          $errs | Format-Table
          if ($errs) { throw "PSScriptAnalyzer violations" }

      - name: Test iamlite
        shell: pwsh
        working-directory: ./iamlite/tests
        run: Invoke-Pester -CI

      - name: Test supportkit
        shell: pwsh
        working-directory: ./supportkit/tests
        run: Invoke-Pester -CI

      - name: Package modules (versioned zips)
        shell: pwsh
        run: |
          New-Item -ItemType Directory dist -Force | Out-Null
          foreach($name in 'IAMLite','SupportKit'){
            $src = "*/src/$name"
            $zip = "dist/$name-${{ github.ref_name }}.zip"
            if (Test-Path $zip) { Remove-Item $zip -Force }
            Compress-Archive -Path "$src/*" -DestinationPath $zip -Force
          }
          Get-ChildItem dist

      - name: Upload artifacts (for debugging)
        uses: actions/upload-artifact@v4
        with:
          name: ops360-${{ github.ref_name }}
          path: dist/*.zip

      - name: Attach artifacts to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*.zip
